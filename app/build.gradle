apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

def keystorePropertyFile = rootProject.file("keystore.properties")
def keystoreProperty = new Properties();
keystoreProperty.load(new FileInputStream(keystorePropertyFile))

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.administrator.epgiskotlin"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions("default")
    }
    signingConfigs {
        debug {
//            keyAlias 'keykey'
//            keyPassword '123456'
//            storePassword '123456'
//            storeFile file('../mapsdkkey.jks')
        }
        release {
            configure {
                keyAlias keystoreProperty['keyAlias']
                keyPassword keystoreProperty['keyPassword']
                storeFile file(keystoreProperty['storeFile'])
                storePassword keystoreProperty['storePassword']

            }
        }

    }


    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {}
    }
    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }

    productFlavors {
//        guanwang {}
//        jiuyao {}
//        qq {}
//        sanliuling {}
//        wandoujia {}
//        anzhi {}
//        mumayi {}
//        jifeng {}
//        xiaomi {}
//        lenovo {}
        oppo {
            manifestPlaceholders = [c: "oppo"]
        }
//        huawei {}
//        jike {}
//        sougou {}
        meizu {
            manifestPlaceholders = [c: "meizu"]
        }
    }

//统一打包
//    productFlavors.all {
//        flavor -> flavor.manifestPlaceHolders = [channelname: name]
//    }

//    android.applicationVariants.all { variant ->
//        variant.outputs.all {
//            def newName
//            newName="name-"+variant.name+".apk"
////            outputFileName = "${variant.name}-${variant.versionName}.apk"
//            outputFileName = newName
//        }
//    }
//    variantFilter{
//        variant->
//            variant.outputs.all{
//
//            }
//            def names=variant.flavors*.name // To check for a build type instead, use variant.buildType.name == "buildType"
//            if (names.contains("minApi21") && names.contains("demo")) {
//                // Gradle ignores any variants that satisfy the conditions above.
//                setIgnore(true)
//            }
//    }
}

dependencies {
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:26.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:support-annotations:27.1.1'
    implementation 'com.android.support:design:26.1.0'
    implementation files('libs/BaiduLBS_Android.jar')
    implementation 'com.yinglan.scrolllayout:scrolllayout:1.0.2'

//    implementation "androidx.lifecycle:lifecycle-extensions:2.0.0"

}
